salsa20_encrypt_decrypt_plugin
==============================

```
살사춤을 춥시다!
                                     @@          
                                    @@@@          
             @@@@                   #@@@          
            :@@@@:                  +@@#          
           @@@@@@#                   @@.          
           @@@@@%=       #%*=    .@@@@@@@@%       
         #*@@@@@.       @--@@    @@@@@@@@@@+      
         -@@%@@@@%*@@@#     .@@@@@.@@@@@@*%@@     
   =    #@@.=@@@@=   .       %@@@  @@@@@@= @@.    
    #  %@*   @@@@             @@   @@@@@@-@@#     
   +@@@-     *@@@                  @@@@@@@@*      
             .@@@                  @@@@@@@:       
            -@@@@@@@@              @@@@@@@        
            @@@@@@@@@=             @@@@@@@:       
           +@@@@@@@+@.             .@@@@@@*       
           @@@#@@@@                 @@@@@@*       
           @@@  -@#                 %@@@@@*       
           @@:  -@:                 .@@@@@+       
          =@@   @@                 .@@@@@         
          *@@  .@%                .@@@@@@:        
          %@#  =@:                *@@@+@@@        
          @@   @-                 -@@+ @@@@       
          @#   @                   -@* -@@@.      
         .@   %-                    %@. @@@=      
         -@  :@                      #- %@#       
         #@. *@                         :@@       
         @:- @.                         -@#       
        =@                              -@:       
                                         :        
```

이 플러그인은 mariadb 에서 [Salsa20](https://en.wikipedia.org/wiki/Salsa20) 암호화, 복호화를 위해 만들어졌습니다.

실제 프로덕션 환경에서 사용하기 전 반드시 적절한 테스트 후 환경에 맞추어 수정해 사용하세요.


Disclaimer
----------

이 코드는 사용자의 환경에 따라 데이터 손실과 같은 위험을 초래할 수 있습니다.

작성자는 이 코드의 정확성, 완전성, 신뢰성 또는 특정 목적에 대한 적합성에 대해 명시적 또는 묵시적인 어떠한 보증도 없으며 면책입니다. 

사용자는 이 코드가 자신의 애플리케이션에 적합하고 안전한지 확인할 책임이 전적으로 본인에게 있음을 인정합니다.

그렇지 않을 경우 이 코드를 사용하지 마십시오.


Required libraries
------------------

빌드를 위해 libsodium, libmysqlclient 라이브러리가 필요합니다.

- Ubuntu/Debian
  
  sudo apt-get update
  sudo apt-get install libmysqlclient-dev libsodium-dev

- CentOS/RHEL
  
  sudo yum install mysql-devel libsodium-devel


How to build
------------

make


How to install
--------------

1. 빌드된 `salsa20_encrypt_decrypt_plugin.so` 파일을 mariadb 플러그인 디렉토리에 복사합니다.
   
   cp ./salsa20_encrypt_decrypt_plugin.so REPLACE-YOUR-SHARE-LIBRARY-PATH/mysql/plugin/

2. 함수 생성 쿼리로 라이브러리를 매핑합니다.

  CREATE FUNCTION SALSA_ENCRYPT RETURNS STRING SONAME 'salsa20_encrypt_decrypt_plugin.so';
  CREATE FUNCTION SALSA_DECRYPT RETURNS STRING SONAME 'salsa20_encrypt_decrypt_plugin.so';

* Where is the mariadb plugin directory
  
  `SHOW VARIABLES LIKE 'plugin_dir';` 쿼리를 실행하면 아래처럼 플러그인 경로가 출력됩니다. 
 
  +---------------+----------------------------------+
  | Variable_name | Value                            |
  +---------------+----------------------------------+
  | plugin_dir    | /usr/share/lib64/mysql/plugin/   |
  +---------------+----------------------------------+


How to use
----------

* 반드시 암호화키는 256비트의 길이로 지정하세요.(그러니까 32글자의 ASCII 믄자, 256/8)

아래와 같이 따라해볼 수 있숩니다.

# 1. 빌드.
$ make clean; make
  rm -f *.o salsa20_encrypt_decrypt_plugin.so
  gcc -fPIC -Wall -I/usr/include/mysql -c salsa20_encrypt_decrypt_plugin.c
  gcc -shared -o salsa20_encrypt_decrypt_plugin.so salsa20_encrypt_decrypt_plugin.o -lsodium -lmysqlclient


# 2. 빌드한 라이브러리 복사.
$ cp salsa20_encrypt_decrypt_plugin.so [YOUR_LIBRARY_DIR]/mysql/plugin/


# 3. 마리아DB 접속
$ mysql -ulocaluser -p


# 4. 초기화
MariaDB > DROP FUNCTION IF EXISTS SALSA_DECRYPT;
MariaDB > DROP FUNCTION IF EXISTS SALSA_ENCRYPT;
MariaDB > CREATE FUNCTION SALSA_DECRYPT RETURNS STRING SONAME 'salsa20_encrypt_decrypt_plugin.so';
MariaDB > CREATE FUNCTION SALSA_ENCRYPT RETURNS STRING SONAME "salsa20_encrypt_decrypt_plugin.so";


# 5. 테스트용 DB, Table 생성
MariaDB > DROP DATABASE IF EXISTS db_salsa_salsa_test;
MariaDB > CREATE DATABASE db_salsa_salsa_test;
MariaDB > USE db_salsa_salsa_test;

MariaDB > DROP TABLE IF EXISTS tb_mixed_vars;
MariaDB > CREATE TABLE tb_mixed_vars (
              cbin LONGTEXT,
              cb64 LONGTEXT,
              chex LONGTEXT,
              cblb BLOB,
              cblbd BLOB
          ) ENGINE=MyISAM;


# 6. Insert encrypted text.
MariaDB > INSERT INTO tb_mixed_vars VALUES(
          SALSA_ENCRYPT("honolulululululululululululululu", "Just", "binary") ,
          SALSA_ENCRYPT("honolulululululululululululululu", "getting", "base64"),
          SALSA_ENCRYPT("honolulululululululululululululu", "older", "hex") ,
          SALSA_ENCRYPT("honolulululululululululululululu", "and smoking", "blob"),
          SALSA_ENCRYPT("honolulululululululululululululu", "more...")
        );

# 7. Select and decrypt text.
MariaDB > SELECT 
          SALSA_DECRYPT("honolulululululululululululululu", (cbin AS CHAR), "binary") AS "cbin",
          SALSA_DECRYPT("honolulululululululululululululu", (cb64 AS CHAR), "base64") AS "cb64",
          SALSA_DECRYPT("honolulululululululululululululu", (chex AS CHAR), "hex") AS "chex",
          SALSA_DECRYPT("honolulululululululululululululu", cblb, "blob") AS "cblb",
          SALSA_DECRYPT("honolulululululululululululululu", cblbd, "blob") AS "cblbd"
        FROM tb_mixed_vars;


# 8. 이게 다예요. 🤷‍♂️

MariaDB > DROP DATABASE IF EXISTS db_salsa_salsa_test;
MariaDB > DROP TABLE IF EXISTS tb_mixed_vars;
MariaDB > quit


TODO
----

[ ] 캐스팅 편의성 추가. 아직 mariadb소스를 까보지 않아서 두렵습니다
[ ] 코드 초미니 경량화
[ ] make install 추가
[ ] test shell 작성

License
-------

Unlicense. 

I love unlicense.